{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-cox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","style","width","height","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","onChange","type","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAEaA,EAAO,SAAAC,GAChB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UACLC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,KAC7BC,IAAG,+BAA0BN,EAAMO,QAAQC,GAAxC,eAEP,6BAAKR,EAAMO,QAAQE,OACnB,4BAAIT,EAAMO,QAAQG,YCLjBC,G,MAAW,SAAAX,GACpB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMY,SAASC,KAAI,SAACN,GACjB,OACI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCP1BM,G,MAAY,SAAC,GAGnB,IAFHC,EAEE,EAFFA,YACAC,EACE,EADFA,aAEA,OACI,uBACIf,UAAU,SACVgB,SAAUD,EACVE,KAAK,SACLH,YAAaA,MC4BVI,E,kDAnCb,aAAe,IAAD,8BACZ,gBAWFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAXtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,oBAK7C,WAAU,IAAD,SAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAAIA,EAAQE,KAAKyB,cAAcC,SAC7Eb,EAAYY,kBAEd,OACE,sBAAKjC,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CACEe,aAAc,SAAAI,GAAC,OAAI,EAAKJ,aAAaI,IACrCL,YAAY,oBAGd,cAAC,EAAD,CAAUH,SAAUoB,W,GA7BVI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7562c6d3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.styles.css'\r\nexport const Card = props => {\r\n    return (\r\n        <div className='card-container'>\r\n            <img alt=\"monster\"\r\n                style={{ width: 200, height: 200 }}\r\n                src={`https://robohash.org/${props.monster.id}?set=set2`}\r\n            />\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { Card } from \"../card/card.component\";\r\nimport './card-list.styles.css'\r\n\r\n\r\nexport const CardList = props => {\r\n    return (\r\n        <div className='card-list'>\r\n            {props.monsters.map((monster) => {\r\n                return (\r\n                    <Card key={monster.id} monster={monster} />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n};","import React from 'react'\r\nimport './search-box-style.css'\r\n\r\nexport const SearchBox = ({\r\n    placeholder,\r\n    handleChange\r\n}) => {\r\n    return (\r\n        <input\r\n            className='search'\r\n            onChange={handleChange}\r\n            type=\"search\"\r\n            placeholder={placeholder} />\r\n    )\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-cox.component';\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }))\n  }\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n  render() {\n    const { monsters, searchField } = this.state\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(\n      searchField.toLowerCase()\n    ))\n    return (\n      <div className=\"App\">\n        <h1> Monsters Rolodex </h1>\n        <SearchBox\n          handleChange={e => this.handleChange(e)}\n          placeholder=\"Search Monsters\"\n        />\n\n        <CardList monsters={filteredMonsters} />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}